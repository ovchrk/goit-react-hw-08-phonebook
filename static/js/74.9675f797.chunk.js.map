{"version":3,"file":"static/js/74.9675f797.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","redux/selectors.js","components/Form/Form.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/List/List.module.css?2bcc","components/List/List.js","webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.js","components/pages/contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"submit\":\"Form_submit__6pNHR\"};","export const selectContacts = state => state.contacts.contact;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import React, { useState } from 'react';\nimport css from '../Form/Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        alert('Не знайдено потрібних значень.');\n    }\n  };\n\n  const handleSubmit = e => {\n    const contact = { name, number };\n    e.preventDefault();\n    ///Проверка на наличие контакта в списке контактов\n    const inList = contacts.some(prevContact => prevContact.name === name);\n    if (inList) {\n      alert(`${name} is already in your list`);\n      return;\n    }\n    //Если проверка не сработала, выполняется дальше этот код.\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name: <br></br>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"true\"\n        />\n      </label>\n      <label className={css.label}>\n        Number: <br></br>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.submit}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport { Form };\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Filter_box__d3XyP\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { searchByName } from 'redux/contactsSlice/contactsSlice';\nimport css from '../Filter/Filter.module.css';\n// import PropTypes from 'prop-types';\n\nexport const Filter = () => {\n  // const filter = useSelector(state => state.contacts.filter) ?? '';\n  const dispatch = useDispatch();\n  const filterOnChange = evt => {\n    dispatch(searchByName(evt.currentTarget.value));\n  };\n\n  return (\n    <label className={css.box}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        // value={filter}\n        onChange={filterOnChange}\n        className={css.input}\n      />\n    </label>\n  );\n};\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   onChange: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"List_box__cHVan\",\"input\":\"List_input__i+Na1\",\"contacts__item\":\"List_contacts__item__+GteN\",\"button\":\"List_button__7efWq\"};","import React, { useEffect } from 'react';\nimport css from '../List/List.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nexport const List = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <div>\n      {filteredContacts.length > 0 ? (\n        <ul className={css.box}>\n          {filteredContacts?.map(({ id, name, number }) => (\n            <li key={id} className={css.contacts__item}>\n              &#8728; {name}: {number}{' '}\n              <button\n                type=\"button\"\n                className={css.button}\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className={css.box}>Contacts not found</div>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Error_box__J5HiV\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectError } from 'redux/selectors';\nimport css from '../Error/Error.module.css';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n  return <div className={css.box}>{error}</div>;\n};\n","import { Form } from '../Form/Form';\nimport { Filter } from '../Filter';\nimport { List } from '../List';\nimport { Loading } from '../Loading';\nimport { Error } from '../Error';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\n\nexport default function ContactsPage() {\n  const contact = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form></Form>\n      <h2>Contacts</h2>\n      <Filter></Filter>\n      {isLoading && <Loading></Loading>}\n      {contact?.length > 0 && <List></List>}\n      {error && <Error></Error>}\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","contact","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Form","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","_e$target","target","value","alert","_jsxs","className","css","onSubmit","preventDefault","some","prevContact","concat","addContact","children","_jsx","type","onChange","pattern","title","required","autoComplete","Filter","evt","searchByName","currentTarget","List","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","length","map","_ref","id","onClick","deleteContact","Error","ContactsPage","_Fragment","Loading"],"sourceRoot":""}